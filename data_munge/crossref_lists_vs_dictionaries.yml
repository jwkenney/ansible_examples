---

# This playbook illustrates how tasks may change when accessing the same data
# in two different formats (list-of-dicts vs dictionary).
# In general, lists are ideal for looping, and dictionaries are ideal for lookups.

- name: LIST-OF-DICTS PLAY- Looping and cross-referencing between two lists-of-dicts
  hosts: localhost
  connection: local
  gather_facts: no

  vars:
    
    websites_list:
      - name: domain.tld
        php_user: domain_php
        subject_alt_names:
          - domain.tld
          - www.domain.tld
      - name: domain2.tld
        php_user: domain_php2
        subject_alt_names:
          - domain.tld2
          - www.domain.tld2
    
    databases_list:
      - name: domain.tld
        db_name: domain_db
        db_user: domain_dba
        db_user_pass: blargblarg
      - name: domain2.tld
        db_name: domain_db2
        db_user: domain_dba2
        db_user_pass: oogabooga

  tasks:

  # In this case we expect selectattr to return a 'list of one', and we eat the list with |first
  # Using task-level vars is helpful for minimizing the messy selectattr jinja work.

  - name: LIST-OF-DICTS | Fetch database info for domain.tld
    debug:
      var: databases_list | selectattr('name', '==', my_host) | list | first
    vars:
      my_host: domain.tld

  - name: LIST-OF-DICTS | Loop through websites_list and fetch db info from databases_list
    debug:
      msg: >
        Site name {{ item['name'] }}.
        Site php user {{ item['php_user'] }}.
        DB name {{ db_info['db_name'] | default('NOTFOUND') }}.
        DB user {{ db_info['db_user'] | default('NOTFOUND') }}.
        DB pass {{ db_info['db_user_pass'] | default('NOTFOUND') }}.
    loop: "{{ websites_list }}"
    loop_control:
      label: "{{ item['name'] }}"
    vars:
      db_info: "{{ databases_list | selectattr('name', 'equalto', item.name ) | list | first }}"
  


- name: DICTIONARIES PLAY- Looping and cross-referencing between two dictionaries
  hosts: localhost
  connection: local
  gather_facts: no
  vars:

    websites_dict:
      domain.tld:
        php_user: domain_php
        subject_alt_names:
          - domain.tld
          - www.domain.tld
      domain2.tld:
        php_user: domain_php2
        subject_alt_names:
        - domain.tld2
        - www.domain.tld2

    databases_dict:
      domain.tld:
        db_name: domain_db
        db_user: domain_dba
        db_user_pass: blargblarg
      domain2.tld:
        db_name: domain_db2
        db_user: domain_dba2
        db_user_pass: oogabooga
  
  tasks:
  
  # With dictionaries, lookups are easy if you know what you are looking for.
  # Looping requires the use of dict2items to convert to a dictionary.

  - name: DICTIONARIES | Fetch database info for domain.tld
    debug:
      var: databases_dict['domain.tld']
  
  - name: DICTIONARIES | Loop through websites_dict and fetch db info from databases_dict
    debug:
      msg: >
        Site name {{ item['key'] }}.
        Site php user {{ item['value']['php_user'] }}.
        DB name {{ databases_dict[item.key]['db_name'] }}.
        DB user {{ databases_dict[item.key]['db_user'] }}.
        DB pass {{ databases_dict[item.key]['db_user_pass'] }}.
    loop: "{{ websites_dict | dict2items }}"
    loop_control:
      label: "{{ item['key'] }}"